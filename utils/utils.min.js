window.ccls={},ccls.utils=ccls.utils||{},ccls.utils.getIdFromUrl=function(e,t){return void 0===t&&(t=document.location.href),t.match("/"+e+"/([0-9]*)/")[1]},ccls.utils.getGlobal=function(e){return new Promise((t=>{if(void 0!==window[e])t(window[e]);else{let l=0;const o=setInterval((()=>{l>50&&(console.log("GetGlobal hit max iteration of 50!!!"),t(null),clearInterval(o)),console.log("Getglobal counter value: "+l),l++,void 0!==window[e]&&(clearInterval(o),t(window[e]))}),20)}}))},ccls.utils.continueAlsoPageIsDirty=function(){if(JSON.stringify(sessionStorage.getItem("WebconBPS_FormIsDirty")).indexOf("true")>-1){let e;switch(window.initModel.userLang.substr(0,2)){case"de":e="Die Seite soll neugeladen werden, bisherige Änderungen werden nicht gespeichert. Wollen Sie fortfahren.";break;case"pl":e="Wszystkie niezapisane dane wprowadzone na formularzu zostaną utracone. Czy chcesz kontynuować?";break;default:e="All unsaved entered data on the form will be lost. Do you wish to continue?";break}return confirm(e)}return!1},ccls.utils.desktopResult=null,ccls.utils.applicationId=null,ccls.utils.basicPathInformation=null,ccls.utils.getFetchHeaders=function(){const e=new Headers,t=localStorage.getItem("WebconBPS_Impersonator");if(t)try{const l=JSON.parse(t);l.login&&e.append("X-Impersonateperson",l.login)}catch(e){}return e},ccls.utils.getLiteModel=async function(){if(null!=ccls.utils.desktopResult)return ccls.utils.desktopResult.liteData.liteModel;let e;const t={method:"GET",headers:ccls.utils.getFetchHeaders()};if(null!=await ccls.utils.getGlobal("G_EDITMODE")&1==window.G_ISNEW){const t=new URLSearchParams(document.location.search);e=`/api/nav/db/${ccls.utils.getIdFromUrl("db")}/start/wf/${ccls.utils.getIdFromUrl("wf")}/dt/${ccls.utils.getIdFromUrl("dt")}/desktop?${t.has("com_id")?"com_id="+t.get("com_id"):""}`}else e=`/api/nav/db/${ccls.utils.getIdFromUrl("db")}/element/${GetPairID(G_WFELEM)}/desktop`,document.location.pathname.endsWith("/edit")&&(e+="/edit");console.log("Calling desktop endpoint");const l=await fetch(e,t);if(!l.ok)throw new Error("Failed to fetch desktopModel");return ccls.utils.desktopResult=await l.json(),ccls.utils.desktopResult.liteData.liteModel},ccls.utils.getSpecificLiteModel=async function(e,t){url=`/api/nav/db/${e}/element/${t}/desktop`,console.log("Calling desktop endpoint for specified element"+t);const l=await fetch(url);if(!l.ok)throw new Error("Failed to fetch desktopModel");return await l.json()},ccls.utils.getApplicationId=async function(){return null==ccls.utils.applicationId&&(ccls.utils.applicationId=(await ccls.utils.getLiteModel()).formInfo.applicationId),ccls.utils.applicationId},ccls.utils.Version=function(e){this.arr=e.split(".").map(Number)},ccls.utils.Version.prototype.compareTo=function(e){for(var t=0;;t++){if(t>=e.arr.length)return t>=this.arr.length?0:1;if(t>=this.arr.length)return-1;var l=this.arr[t]-e.arr[t];if(l)return l>0?1:-1}},ccls.utils.getVersionValues=function(e){let t=new ccls.utils.Version(window.window.initModel.version);return e.findLast((e=>t.compareTo(new ccls.utils.Version(e.version))>-1)).values},console.log("utils have been loaded");